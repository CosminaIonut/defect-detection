[[0.00086654 0.00086654 0.00086654 ... 0.00086654 0.00086654 0.00086654]
 [0.00119113 0.00119113 0.00119113 ... 0.00119113 0.00119113 0.00119113]
 [0.00214098 0.00214098 0.00214098 ... 0.00214098 0.00214098 0.00214098]
 ...
 [0.03716586 0.0253569  0.01678278 ... 0.00258239 0.0016026  0.00215171]
 [0.0462074  0.03139693 0.02064352 ... 0.00283378 0.00160496 0.00229364]
 [0.05900354 0.03994516 0.02610747 ... 0.00318957 0.0016083  0.0024945 ]]
[[0.  ]
 [0.  ]
 [0.  ]
 ...
 [0.05]
 [0.05]
 [0.05]]
(1518, 1, 8)
(1518, 1)
(380, 1, 8)
(380, 1)
Epoch 1/300
wandb: WARNING The save_model argument by default saves the model in the HDF5 format that cannot save custom objects like subclassed models and custom layers. This behavior will be deprecated in a future release in favor of the SavedModel format. Meanwhile, the HDF5 model is saved as W&B files and the SavedModel as W&B Artifacts.
Traceback (most recent call last):
  File "C:\MyDocuments\Disertatie\segments\wandb_visualization\overlap\wrapper_test_and_train.py", line 425, in <module>
    train_1DCNN()
  File "C:\MyDocuments\Disertatie\segments\wandb_visualization\overlap\wrapper_test_and_train.py", line 279, in train_1DCNN
    train_models_and_save_1D_CNN(n_members,data,test_size,train_group_cnn, epochs, batch_size, learning_rate,optimizer,cnn_layer_size, cnn_input_nodes, patience,monitor,dense_units)
  File "C:\MyDocuments\Disertatie\segments\wandb_visualization\overlap\test_and_train.py", line 117, in train_models_and_save_1D_CNN
    network, history = train_model_sweep(build_1Dcnn_sweep_maxpooling(optimizer, learning_rate, cnn_layer_size,cnn_input_nodes,dense_units,n_timesteps), x_train_cnn,
  File "C:\MyDocuments\Disertatie\segments\model_training\overlap\model_generating_RNN.py", line 122, in train_model_sweep
    history = network.fit(x_train, y_train, epochs=epochs, batch_size = batch_size, validation_data=(x_test, y_test),
  File "C:\Users\cosmi\AppData\Roaming\Python\Python39\site-packages\wandb\integration\keras\keras.py", line 174, in new_v2
    return old_v2(*args, **kwargs)
  File "C:\Users\cosmi\AppData\Roaming\Python\Python39\site-packages\wandb\integration\keras\keras.py", line 174, in new_v2
    return old_v2(*args, **kwargs)
  File "C:\Users\cosmi\AppData\Roaming\Python\Python39\site-packages\wandb\integration\keras\keras.py", line 174, in new_v2
    return old_v2(*args, **kwargs)
  File "C:\Users\cosmi\anaconda3\envs\tf2.12\lib\site-packages\keras\utils\traceback_utils.py", line 70, in error_handler
    raise e.with_traceback(filtered_tb) from None
  File "C:\Users\cosmi\AppData\Local\Temp\__autograph_generated_filepbc77d61.py", line 15, in tf__train_function
    retval_ = ag__.converted_call(ag__.ld(step_function), (ag__.ld(self), ag__.ld(iterator)), None, fscope)
ValueError: in user code:
    File "C:\Users\cosmi\anaconda3\envs\tf2.12\lib\site-packages\keras\engine\training.py", line 1160, in train_function  *
        return step_function(self, iterator)
    File "C:\Users\cosmi\anaconda3\envs\tf2.12\lib\site-packages\keras\engine\training.py", line 1146, in step_function  **
        outputs = model.distribute_strategy.run(run_step, args=(data,))
    File "C:\Users\cosmi\anaconda3\envs\tf2.12\lib\site-packages\keras\engine\training.py", line 1135, in run_step  **
        outputs = model.train_step(data)
    File "C:\Users\cosmi\anaconda3\envs\tf2.12\lib\site-packages\keras\engine\training.py", line 993, in train_step
        y_pred = self(x, training=True)
    File "C:\Users\cosmi\anaconda3\envs\tf2.12\lib\site-packages\keras\utils\traceback_utils.py", line 70, in error_handler
        raise e.with_traceback(filtered_tb) from None
    File "C:\Users\cosmi\anaconda3\envs\tf2.12\lib\site-packages\keras\engine\input_spec.py", line 295, in assert_input_compatibility
        raise ValueError(
    ValueError: Input 0 of layer "sequential" is incompatible with the layer: expected shape=(None, 8, 8), found shape=(None, 1, 8)